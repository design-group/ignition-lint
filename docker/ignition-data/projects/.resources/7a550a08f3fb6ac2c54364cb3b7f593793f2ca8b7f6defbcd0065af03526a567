{
  "custom": {},
  "params": {},
  "propConfig": {
    "props.root.children.0.props.text": {
      "binding": {
        "config": {
          "expression": "self.getSibling(\u0027OtherLabel\u0027).props.text + \u0027 - Updated\u0027"
        },
        "type": "expr"
      }
    }
  },
  "props": {
    "defaultSize": {
      "height": 600
    }
  },
  "root": {
    "children": [
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\n# Bad pattern 1: getSibling\nsibling \u003d self.getSibling(\u0027StatusLabel\u0027)\nsibling.props.text \u003d \u0027Button clicked!\u0027\n\n# Bad pattern 2: getParent\nparent \u003d self.getParent()\nparent.props.style.backgroundColor \u003d \u0027red\u0027\n"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "BadButton"
        },
        "position": {
          "shrink": 0
        },
        "props": {
          "text": "Click Me"
        },
        "type": "ia.input.button"
      },
      {
        "meta": {
          "name": "StatusLabel"
        },
        "position": {
          "shrink": 0
        },
        "props": {
          "style": {
            "textAlign": "center"
          },
          "text": "Ready"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "ContainerWithBadScript"
        },
        "position": {
          "grow": 1
        },
        "propConfig": {
          "props.children": {
            "binding": {
              "config": {
                "expression": "self.parent.getChild(\u0027DataSource\u0027).props.data"
              },
              "type": "expr"
            }
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "CustomMethodComponent"
        },
        "position": {
          "shrink": 0
        },
        "props": {
          "text": "Custom Methods"
        },
        "scripts": {
          "customMethods": [
            {
              "name": "updateSibling",
              "params": [],
              "script": "\n# Bad pattern in custom method\ntarget \u003d self.getSibling(\u0027StatusLabel\u0027)\ntarget.props.text \u003d \u0027Updated by custom method\u0027\nreturn target.props.text\n"
            },
            {
              "name": "navigateHierarchy",
              "params": [
                "direction"
              ],
              "script": "\n# Multiple bad patterns in one method\nif direction \u003d\u003d \u0027up\u0027:\n    return self.getParent().props.name\nelif direction \u003d\u003d \u0027down\u0027:\n    children \u003d self.getChildren()\n    return [child.props.name for child in children]\nelse:\n    sibling \u003d self.getSibling(\u0027StatusLabel\u0027)\n    return sibling.props.text\n"
            }
          ],
          "extensionFunctions": null,
          "messageHandlers": []
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "MessageHandlerComponent"
        },
        "position": {
          "shrink": 0
        },
        "props": {
          "text": "Message Handler"
        },
        "scripts": {
          "customMethods": [],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "update-status",
              "pageScope": false,
              "script": "\n# Bad pattern in message handler\nstatusLabel \u003d self.getSibling(\u0027StatusLabel\u0027)\nstatusLabel.props.text \u003d payload[\u0027newStatus\u0027]\n\n# Another bad pattern\ncontainer \u003d self.getParent()\ncontainer.props.style.backgroundColor \u003d payload[\u0027color\u0027]\n",
              "sessionScope": false,
              "viewScope": true
            }
          ]
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "gap": "var(--m)",
        "padding": "var(--m)"
      }
    },
    "type": "ia.container.flex"
  }
}
